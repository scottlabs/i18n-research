<!--

{
  contents : [
    {
      model : '',
      view : '',
      region : '',
      path : ''
    }
  ]
}

!-->

this.should = {};
{{~it :content:index}}
  if(typeof app.views.{{=content.model.toLowerCase()}} === 'undefined' || app.views.{{=content.model.toLowerCase()}}.should('{{=content.path}}') === 'update') {
    if(typeof app.views.{{=content.model.toLowerCase()}} === 'undefined') {
      if(!document.querySelector('[data-content="{{=content.model.toLowerCase()}}"]')) {
        this.should['{{=content.model.toLowerCase()}}'] = 'update';
      }
      else {
        this.should['{{=content.model.toLowerCase()}}'] = 'keep';
      }
    }
    else {
      this.should['{{=content.model.toLowerCase()}}'] = app.views.{{=content.model.toLowerCase()}}.should('{{=content.path}}');
      Backbone.Relational.store.unregister(app.models.{{=content.model.toLowerCase()}});
    }
    app.models.{{=content.model.toLowerCase()}} = new {{=content.model}};
    app.views.{{=content.model.toLowerCase()}} = new {{=content.view}}(app.models.{{=content.model.toLowerCase()}});
      incorrectRegions++;
      setTimeout(function() {
        try {
          app.models.{{=content.model.toLowerCase()}}.fetch({
            success: function() {
              _this.content['{{=content.region}}'] = app.views.{{=content.model.toLowerCase()}}.toHTML();
              if(typeof app.views.{{=content.model.toLowerCase()}}.bindModel === 'function') {
                app.views.{{=content.model.toLowerCase()}}.bindModel();
              }
              n++;
              if(n === incorrectRegions) {
                app.document.trigger('fetchend', '{{=content.path}}');
                _this['render {{=content.path}}']();
              }
            }
          });
        }
        catch(err) {
          if(err.message === 'A "url" property or function must be specified') {
            _this.content['{{=content.region}}'] = app.views.{{=content.model.toLowerCase()}}.toHTML();
            n++;
            if(n === incorrectRegions) {
              app.document.trigger('fetchend', '{{=content.path}}');
              _this['render {{=content.path}}']();
            }
          }
          else {
            throw err;
          }
        }
      }, 0);
  }
  else if(app.views.{{=content.model.toLowerCase()}}.should('{{=content.path}}') === 'remove') {
    app.views.{{=content.model.toLowerCase()}}.hide();
  }
  else {
    app.views.{{=content.model.toLowerCase()}}.show();
  }
{{~}}
